from pymilvus import FieldSchema, CollectionSchema, DataType, Collection, utility
from connect_milvus import connect_milvus  # Import k·∫øt n·ªëi

def create_collection(collection_name):
    connect_milvus()  # K·∫øt n·ªëi tr∆∞·ªõc

    # X√≥a collection n·∫øu ƒë√£ t·ªìn t·∫°i
    if utility.has_collection(collection_name):
        utility.drop_collection(collection_name)
        print(f"üóëÔ∏è ƒê√£ x√≥a collection c≈©: {collection_name}")

    # ƒê·ªãnh nghƒ©a schema
    fields = [
        FieldSchema(name="id", dtype=DataType.INT64, is_primary=True, auto_id=True),
        FieldSchema(name="embedding", dtype=DataType.FLOAT_VECTOR, dim=1024),
        FieldSchema(name="c_id", dtype=DataType.INT16, max_length=100)
    ]
    schema = CollectionSchema(fields, description="L∆∞u embeddings")

    # T·∫°o collection
    collection = Collection(name=collection_name, schema=schema)
    collection.create_index(
        field_name="embedding",
        index_params={"index_type": "IVF_FLAT", "metric_type": "COSINE", "params": {"nlist": 128}}
    )
    print("‚úÖ Index ƒë√£ ƒë∆∞·ª£c t·∫°o!")

    # Load collection ƒë·ªÉ index ho·∫°t ƒë·ªông
    collection.load()
    print(f"‚úÖ Collection '{collection_name}' ƒë√£ ƒë∆∞·ª£c t·∫°o!")

if __name__ == "__main__":
    #collection_name = "job_embeddings" #Embedding c·ªßa ti·∫øng anh
    #collection_name = "job_embeddings_ger"
    #collection_name = "job_embeddings_span"
    collection_name = "job_embeddings_china"

    create_collection(collection_name)
